import sys
import speech_recognition as sr
import os
import pyttsx3
import webbrowser
import pywhatkit
import datetime
import wikipedia
import pyjokes
import requests
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5 import QtGui
from PyQt5.uic import loadUiType
from OPTIMUS_UI import Ui_Optimus


class Main(QMainWindow):
    def __init__(self):
        print("Initializing Main...")
        super(Main, self).__init__()

        try:
            self.ui = Ui_Optimus()
            self.ui.setupUi(self)
            self.ui.pushButton.clicked.connect(self.startTask)
            self.ui.pushButton_2.clicked.connect(self.close)
        except Exception as e:
            print(f"Initialization error: {e}")
            raise

        # Initialize speech recognition and text-to-speech
        self.recognizer = sr.Recognizer()
        self.engine = pyttsx3.init()

    def speak(self, text):
        self.ui.textBrowser.append(text)
        self.engine.say(text)
        self.engine.runAndWait()

    def listen(self):
        with sr.Microphone() as source:
            print("Listening...")
            self.recognizer.adjust_for_ambient_noise(source)
            audio = self.recognizer.listen(source, timeout=5, phrase_time_limit=5)

        try:
            print("Recognizing...")
            query = self.recognizer.recognize_google(audio, language="en-in")
            print(f"You said: {query}")
            return query.lower()
        except sr.UnknownValueError:
            print("Sorry, I didn't catch that. Could you repeat?")
            return None
        except sr.RequestError as e:
            print(f"Could not request results from Google Speech Recognition service; {e}")
            return None

    def run_jarvis(self):
        sites = [["youtube", "https://www.youtube.com"], ["google", "https://www.google.com"],
                 ["wikipedia", "https://www.wikipedia.com"], ["instagram", "https://www.instagram.com"]]
        while True:
            self.command = self.listen()
            print(self.command)
            if 'play' in self.command:
                song = self.command.replace('playing', '')
                self.speak('playing ' + song)
                pywhatkit.playonyt(song)
            elif 'time' in self.command:
                time = datetime.datetime.now().strftime('%I:%M %p')
                self.speak('Current time is ' + time)
                print(f"Current time is: " + time)
            elif 'who the heck is' in self.command:
                person = self.command.replace('who the heck is', '')
                info = wikipedia.summary(person, 1)
                print(info)
                self.speak(info)
            elif 'date' in self.command:
                self.speak('sorry, I have a headache')
            elif 'are you single' in self.command:
                self.speak('I am in a relationship with wifi')
            elif 'joke' in self.command:
                self.speak(pyjokes.get_joke())
            elif 'open' in self.command:
                for site in sites:
                    if f"open {site[0]}".lower() in self.command.lower():
                        self.speak(f"opening {site[0]}...")
                        print(f"Opening {site[0]}...")
                        webbrowser.open(site[1])
            elif 'weather' in self.command:
                self.speak("Sure, which city's weather would you like to know?")
                city = self.listen()
                if city:
                    weather_info = get_weather(city)
                    self.speak(weather_info)
            elif 'exit' in self.command:
                self.speak("Thank You!, Good Bye!")
                break
            else:
                self.speak('Please say the command again')

    def startTask(self):
        print("Starting task...")
        try:
            if self.ui.label is not None:
                self.ui.movie = QtGui.QMovie("C:/Users/sanga/Downloads/Siri.gif")
                self.ui.label.setMovie(self.ui.movie)
                self.ui.movie.start()
                self.run_jarvis()
            else:
                print("Error: self.ui.label is None")
        except Exception as e:
            print(f"Error in startTask: {e}")


def get_weather(city):
    base_url = "https://api.openweathermap.org/data/2.5/weather?q="
    response = requests.get(base_url + city + "&appid=" + 'd1d10dd217f80c0077dda159cc374372')
    weather_data = response.json()
    if response.status_code == 200:
        main_weather = weather_data['weather'][0]['description']
        temperature = weather_data['main']['temp']
        return f"The weather in {city} is {main_weather} with a temperature of {temperature} degrees Celsius"
    else:
        return "Sorry, I couldn't retrieve the weather information"


# if __name__ == "__main__":
#     app = QApplication(sys.argv)
#     optimus = Main()
#     optimus.show()
#     sys.exit(app.exec_())

if __name__ == "__main__":
    try:
        app = QApplication(sys.argv)
        optimus = Main()
        optimus.show()
        sys.exit(app.exec_())
    except Exception as e:
        print(f"An error occurred: {e}")
